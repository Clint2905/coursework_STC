// Calaculate Hours, minutes and seconds given input in seconds

#include <iostream>

using namespace std;

int timeEntered = 0;
int timeOut = 0;

int hoursOut = 0;
int minutesOut = 0;
int secondsOut = 0;
int minutesToSeconds = 60;
int hoursToMinutes = 60;



bool calculatorRunning;

char timerChoice = ' ';

void QuitCalculator()
{
    cout << "Thank you for using this program" << endl;
    calculatorRunning = false;
    system("pause");
}




void PrintTimeSecondsToHours()
{
    cout << "Time: ";
    cout << timeOut;
    cout << "s = ";

    cout << hoursOut;
    cout << "h " << endl;
    
    system("pause");
}

void PrintTimeSecondsToMinutes()
{
    cout << "Time: ";
    cout << timeOut;
    cout << "s = ";

    cout << minutesOut;
    cout << "m " << endl;

    system("pause");
}

void PrintTimeMinutuesToHours()
{
    cout << "Time: ";
    cout << timeOut;
    cout << "M = ";

    cout << hoursOut;
    cout << "h " << endl;
    system("pause");

}
void PrintTimeMinutuesToSeconds()
{
    cout << "Time: ";
    cout << timeOut;
    cout << "M = ";

    cout << secondsOut;
    cout << "s" << endl;
    system("pause");

}
void PrintTimeHours()
{
    cout << "Time: ";
    cout << timeOut;
    cout << "H = ";

    cout << secondsOut;
    cout << "s" << endl;
    system("pause");
}
void CalculateTimeSecondstoHours()
{
    timeOut = timeEntered;

    hoursOut = timeEntered / (minutesToSeconds * hoursToMinutes);
    timeEntered -= (minutesToSeconds * hoursToMinutes * hoursOut);
}
void CalculateTimeSecondstoMinutes()
{
    timeOut = timeEntered;

    minutesOut = timeEntered / minutesToSeconds;
    secondsOut = (int)timeEntered % minutesToSeconds;
}

void calculateTimeMinutesToHours() 
{
timeOut = timeEntered;

hoursOut = timeEntered / hoursToMinutes;
timeEntered -= (minutesToSeconds * hoursOut);
}
void calculateTimeMinutesToSeconds() 
{
    timeOut = timeEntered;
    secondsOut = timeEntered * 60 ;
    timeEntered -= (minutesToSeconds * hoursOut);
}
void calculateTimeHours() {
timeOut = timeEntered;
secondsOut= timeEntered * 60 *60 ;
timeEntered -= (minutesToSeconds * hoursOut);
}
void SecondsToHoursEntry()
{
    cout << "Enter time in seconds: ";
    cin >> timeEntered;

    CalculateTimeSecondstoHours();
    PrintTimeSecondsToHours();
}

void SecondsToMinutesEntry()
{
    cout << "Enter time in seconds: ";
    cin >> timeEntered;

    CalculateTimeSecondstoMinutes();
    PrintTimeSecondsToMinutes();

}

void MinutesToHoursEntry()
{
    cout << "Enter time in mintues: ";
    cin >> timeEntered;
    calculateTimeMinutesToHours();
    PrintTimeMinutuesToHours();

}

void MinutesToSecondsEntry()
{
    cout << "Enter time in mintues: ";
    cin >> timeEntered;

    calculateTimeMinutesToSeconds();
    PrintTimeMinutuesToSeconds();

}

void HoursToSecondsEntry()
{
    cout << "Enter time in hours : ";
    cin >> timeEntered;

    calculateTimeHours();
    PrintTimeHours();
}

void ProcessMenuInput()
{
    switch (timerChoice)
    {
    case '1':
        SecondsToHoursEntry();
        break;
    case '2':
        SecondsToMinutesEntry();
        break;
    case '3':
        MinutesToHoursEntry();
        break;
    case '4':
        MinutesToSecondsEntry();
        break;
    case '5':
        HoursToSecondsEntry();
        break;
    case 'Q':
    case 'q':
        
        QuitCalculator();
        break;
    default:
        break;
    }
}

void ShowTimerMenu()
{
    system("CLS");
    cout << "******************" << endl;
    cout << "*  Simple Time Calculator *" << endl;
    cout << "******************" << endl;
    cout << "[1] - seconds to hours" << endl;
    cout << "[2] - seconds to minutes" << endl;
    cout << "[3] - minutes to hours" << endl;
    cout << "[4] - minutes to seconds" << endl;
    cout << "[5] - hours to seconds" << endl;
    cout << "------------------" << endl;
    cout << "[Q] - Quit" << endl;
    cout << "******************" << endl;
    cout << "Enter [1], [2], [3] , [4], [5] to convert or [Q] to Quit: ";

    cin >> timerChoice;
    ProcessMenuInput();
}



int main()
{
    calculatorRunning = true;
    do {
        ShowTimerMenu();
    } while (calculatorRunning);


    return 0;
}
